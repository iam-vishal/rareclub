$orbitItemSize: 70px;
$map: (
  ring-0: 4,
  ring-1: 3,
  ring-2: 8,
  ring-3: 3,
);
$lastRing: 3;

* {
  box-sizing: border-box;
}

.orbit {
  width: 100%;
}

.orbit-icon {
  width: $orbitItemSize;
  height: $orbitItemSize;
  line-height: $orbitItemSize;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid hsla(0, 0%, 100%, 0.08);
  background: #101010;
  object-fit: cover;
  object-position: top;
  &.zomato {
    padding: 5px;
    object-fit: contain;
    object-position: center;
  }
}

.orbit-wrap {
  list-style: none;
  font-size: 4em;
  position: relative;
  > li {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}

ul[class^="ring"] {
  @extend %ring;
  transition: all 300ms ease-in-out;
  li {
    @extend %orbiting-object;
    transition: all 300ms ease-in-out;
  }
}

@mixin orbit-item($numItems, $numRing) {
  @for $s from 1 through $numItems {
    // Spread items over the ring
    $deg: 380deg / $numItems;

    .ring-#{$numRing} > *:nth-of-type(#{$s}) {
      transform: rotate($s * $deg)
        translate(12.5em - ($numRing * 2.5))
        rotate(-$s * $deg);
    }
  }
}

// Render rings
@for $i from 0 through $lastRing {
  .ring-#{$i} {
    // decrease each ring in size
    width: 25em - ($i * 5);
    height: 25em - ($i * 5);
    animation: clockwiseRotate 55s - ($i * 5) linear infinite;

    img {
      animation: counterClockwiseRotate 55s - ($i * 5) linear infinite;
    }
  }

  @include orbit-item(map-get($map, ring-#{$i}), $i);
}

%ring {
  border: 2px dashed #d9d9d934;
  position: relative;
  padding: 0;
  border-radius: 50%;
  list-style: none;
  box-sizing: content-box;
}

%orbiting-object {
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  width: $orbitItemSize;
  height: $orbitItemSize;
  margin: -$orbitItemSize / 2;
}

/* 
animations 
*/
@keyframes clockwiseRotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes counterClockwiseRotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(-360deg);
  }
}
